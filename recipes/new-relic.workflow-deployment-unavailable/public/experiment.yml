---
name: "New Relic should detect a disrupted workflow when gateway is unavaiable"
team: "{{teamKey}}"
environment: "{{environmentName}}"
lanes:
  - steps:
      - !<action>
        ignoreFailure: false
        parameters:
          duration: "15s"
          expectedStates:
            - "OPERATIONAL"
          conditionCheckMode: "allTheTime"
        customLabel: "Given: Workflow is operational"
        actionType: "com.steadybit.extension_newrelic.workload_check"
        radius:
          targetType: "com.steadybit.extension_newrelic.workload"
          predicate:
            operator: "AND"
            predicates:
              - key: "new-relic.workload.name"
                operator: "EQUALS"
                values:
                  - "prod-demo"
          query: null
  - steps:
      - !<wait>
        ignoreFailure: false
        parameters:
          duration: "15s"
      - !<action>
        ignoreFailure: false
        parameters:
          ip: []
          port: []
          duration: "180s"
          hostname: []
          failOnHostNetwork: true
        customLabel: "WHEN: Gateway can't be reached"
        actionType: "com.steadybit.extension_container.network_blackhole"
        radius:
          targetType: "com.steadybit.extension_container.container"
          predicate:
            operator: "AND"
            predicates:
              - key: "k8s.cluster-name"
                operator: "EQUALS"
                values:
                  - "prod-demo"
              - key: "k8s.namespace"
                operator: "EQUALS"
                values:
                  - "steadybit-demo"
              - key: "k8s.deployment"
                operator: "EQUALS"
                values:
                  - "gateway"
          query: null
          percentage: 100
  - steps:
      - !<wait>
        ignoreFailure: false
        parameters:
          duration: "15s"
      - !<action>
        ignoreFailure: false
        parameters:
          duration: "300s"
          expectedStates:
            - "DISRUPTED"
          conditionCheckMode: "atLeastOnce"
        customLabel: "THEN: Workflow should be disrupted"
        actionType: "com.steadybit.extension_newrelic.workload_check"
        radius:
          targetType: "com.steadybit.extension_newrelic.workload"
          predicate:
            operator: "AND"
            predicates:
              - key: "new-relic.workload.name"
                operator: "EQUALS"
                values:
                  - "prod-demo"
          query: null
  - steps:
      - !<wait>
        ignoreFailure: false
        parameters:
          duration: "15s"
      - !<action>
        ignoreFailure: false
        parameters:
          duration: "300s"
        customLabel: "WHILE: Muting New Relic to avoid escalations"
        actionType: "com.steadybit.extension_newrelic.create_muting_rule"
        radius:
          targetType: "com.steadybit.extension_newrelic.account"
          predicate:
            operator: "AND"
            predicates:
              - key: "new-relic.account.id"
                operator: "EQUALS"
                values:
                  - "2847806"
          query: null
  - steps:
      - !<action>
        ignoreFailure: false
        parameters:
          duration: "315s"
        customLabel: "Collect Event Logs"
        actionType: "com.steadybit.extension_kubernetes.kubernetes_logs"
        radius:
          targetType: "com.steadybit.extension_kubernetes.kubernetes-cluster"
          predicate:
            operator: "AND"
            predicates:
              - key: "k8s.cluster-name"
                operator: "EQUALS"
                values:
                  - "prod-demo"
          query: null
  - steps:
      - !<action>
        ignoreFailure: false
        parameters:
          duration: "315s"
        customLabel: "Collect Pod Count Metrics"
        actionType: "com.steadybit.extension_kubernetes.pod_count_metric"
        radius:
          targetType: "com.steadybit.extension_kubernetes.kubernetes-cluster"
          predicate:
            operator: "AND"
            predicates:
              - key: "k8s.cluster-name"
                operator: "EQUALS"
                values:
                  - "prod-demo"
          query: null
