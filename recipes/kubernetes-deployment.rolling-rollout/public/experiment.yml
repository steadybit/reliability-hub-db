---
!<experiment>
name: "Faultless redundancy of Gateway during rolling update"
team: "{{teamKey}}"
hypothesis: "When a deployment is rescheduled 95% of all requests are successful"
environment: "{{environmentName}}"
lanes:
  - steps:
      - !<action>
        ignoreFailure: false
        parameters:
          url: "http://demo.steadybit.io/products"
          method: "GET"
          duration: "10s"
          statusCode: "200-299"
          readTimeout: "5s"
          successRate: 100
          maxConcurrent: "5"
          connectTimeout: "5s"
          followRedirects: "false"
          requestsPerSecond: 10
        customLabel: "GIVEN: All HTTP-Calls are successful"
        actionType: "com.steadybit.extension_http.check.periodically"
        radius: {}
  - steps:
      - !<action>
        ignoreFailure: false
        parameters:
          duration: "10s"
          podCountCheckMode: "podCountEqualsDesiredCount"
        customLabel: "GIVEN: All PODs are available"
        actionType: "com.steadybit.extension_kubernetes.pod_count_check"
        radius:
          targetType: "com.steadybit.extension_kubernetes.kubernetes-deployment"
          predicate:
            operator: "AND"
            predicates:
              - key: "k8s.cluster-name"
                operator: "EQUALS"
                values:
                  - "prod-demo"
              - key: "k8s.namespace"
                operator: "EQUALS"
                values:
                  - "steadybit-demo"
              - key: "k8s.deployment"
                operator: "EQUALS"
                values:
                  - "gateway"
          query: null
  - steps:
      - !<wait>
        ignoreFailure: false
        parameters:
          duration: "10s"
        customLabel: "Wait: Until GIVEN steps are checked"
      - !<action>
        ignoreFailure: false
        parameters: {}
        customLabel: "WHEN: A rollout restart is executed"
        actionType: "com.steadybit.extension_kubernetes.rollout-restart"
        radius:
          targetType: "kubernetes-deployment"
          predicate:
            operator: "AND"
            predicates:
              - key: "k8s.cluster-name"
                operator: "EQUALS"
                values:
                  - "prod-demo"
              - key: "k8s.namespace"
                operator: "EQUALS"
                values:
                  - "steadybit-demo"
              - key: "k8s.deployment"
                operator: "EQUALS"
                values:
                  - "gateway"
          query: null
          percentage: 100
  - steps:
      - !<wait>
        ignoreFailure: false
        parameters:
          duration: "10s"
      - !<action>
        ignoreFailure: false
        parameters:
          url: "http://demo.steadybit.io/products"
          method: "GET"
          duration: "180s"
          statusCode: "200-299"
          readTimeout: "5s"
          successRate: 95
          maxConcurrent: "5"
          connectTimeout: "5s"
          followRedirects: "false"
          requestsPerSecond: 10
        customLabel: "THEN: At least 95% of the HTTP calls are successful"
        actionType: "com.steadybit.extension_http.check.periodically"
        radius: {}
  - steps:
      - !<wait>
        ignoreFailure: false
        parameters:
          duration: "190s"
        customLabel: "Wait: Until Rolling Update is expected to be finished"
      - !<action>
        ignoreFailure: false
        parameters:
          duration: "10s"
          podCountCheckMode: "podCountEqualsDesiredCount"
        customLabel: "THEN: All PODs are available"
        actionType: "com.steadybit.extension_kubernetes.pod_count_check"
        radius:
          targetType: "com.steadybit.extension_kubernetes.kubernetes-deployment"
          predicate:
            operator: "AND"
            predicates:
              - key: "k8s.cluster-name"
                operator: "EQUALS"
                values:
                  - "prod-demo"
              - key: "k8s.namespace"
                operator: "EQUALS"
                values:
                  - "steadybit-demo"
              - key: "k8s.deployment"
                operator: "EQUALS"
                values:
                  - "gateway"
          query: null
  - steps:
      - !<wait>
        ignoreFailure: false
        parameters:
          duration: "190s"
        customLabel: "Wait: Until Rolling Update is expected to be finished"
      - !<action>
        ignoreFailure: false
        parameters:
          url: "http://demo.steadybit.io/products"
          method: "GET"
          duration: "10s"
          statusCode: "200-299"
          readTimeout: "5s"
          successRate: 100
          maxConcurrent: "5"
          connectTimeout: "5s"
          followRedirects: "false"
          requestsPerSecond: 10
        customLabel: "THEN: All HTTP-Calls are successful again"
        actionType: "com.steadybit.extension_http.check.periodically"
        radius: {}