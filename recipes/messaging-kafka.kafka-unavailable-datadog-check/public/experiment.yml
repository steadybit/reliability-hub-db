---
!<experiment>
name: "Verify graceful degradation while Kafka is unavailable"
team: "{{teamKey}}"
hypothesis: "An unavailable Kafka is not user-visible as it leads to graceful degradation and downstream retries as soon as the Kafka is back 
available again."
environment: "{{environmentName}}"
lanes:
  - steps:
      - !<action>
        ignoreFailure: false
        parameters:
          duration: "3m"
          podCountCheckMode: "podCountEqualsDesiredCount"
        customLabel: "The pod should survive a kafka downtime"
        actionType: "com.steadybit.extension_kubernetes.pod_count_check"
        radius:
          targetType: "com.steadybit.extension_kubernetes.kubernetes-deployment"
          predicate:
            operator: "AND"
            predicates:
              - key: "k8s.cluster-name"
                operator: "EQUALS"
                values:
                  - "prod-demo"
              - key: "k8s.namespace"
                operator: "EQUALS"
                values:
                  - "steadybit-demo"
              - key: "k8s.deployment"
                operator: "EQUALS"
                values:
                  - "gateway"
          query: null
  - steps:
      - !<action>
        ignoreFailure: false
        parameters:
          duration: "30s"
          expectedStatusList:
            - "OK"
            - "No Data"
        customLabel: "Monitors should be OK or No Data"
        actionType: "com.steadybit.extension_datadog.monitor.status_check"
        radius:
          targetType: "com.steadybit.extension_datadog.monitor"
          predicate:
            operator: "AND"
            predicates:
              - key: "datadog.monitor.tags"
                operator: "EQUALS"
                values:
                  - "service:test"
          query: null
      - !<action>
        ignoreFailure: false
        parameters:
          port: ["9094"]
          duration: "2m"
          hostname: []
        customLabel: "WHEN: Kafka is not available"
        actionType: "com.steadybit.extension_container.network_blackhole"
        radius:
          targetType: "container"
          predicate:
            operator: "AND"
            predicates:
              - key: "k8s.deployment"
                operator: "EQUALS"
                values:
                  - "steadybit-demo"
              - key: "k8s.container.name"
                operator: "EQUALS"
                values:
                  - "main"
              - key: "k8s.cluster-name"
                operator: "EQUALS"
                values:
                  - "prod-demo"
              - key: "k8s.namespace"
                operator: "EQUALS"
                values:
                  - "steadybit-demo"
          query: null
          percentage: 100
      - !<action>
        ignoreFailure: false
        parameters:
          duration: "30s"
          expectedStatus: "OK"
        actionType: "com.steadybit.extension_datadog.monitor.status_check"
        radius:
          targetType: "com.steadybit.extension_datadog.monitor"
          predicate:
            operator: "AND"
            predicates:
              - key: "datadog.monitor.tags"
                operator: "EQUALS"
                values:
                  - "service:test"
          query: null
  - steps:
      - !<wait>
        ignoreFailure: false
        parameters:
          duration: "40s"
      - !<action>
        ignoreFailure: true
        parameters:
          duration: "100s"
          expectedStatus: "Alert"
          statusCheckMode: "atLeastOnce"
        actionType: "com.steadybit.extension_datadog.monitor.status_check"
        radius:
          targetType: "com.steadybit.extension_datadog.monitor"
          predicate:
            operator: "AND"
            predicates:
              - key: "datadog.monitor.tags"
                operator: "EQUALS"
                values:
                  - "service:test"
          query: null
