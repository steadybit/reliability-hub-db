---
!<experiment>
name: "Verify system unavailability status when Microsoft SQL Server database can not be reached"
team: "{{teamKey}}"
hypothesis:
  "An unavailable Microsoft SQL Server database might be too severe for\
    \ suitable fallbacks and requires your system to indicate unavailability appropriately."
environment: "{{environmentName}}"
lanes:
  - steps:
      - !<action>
        ignoreFailure: false
        parameters:
          url: "http://demo.steadybit.io/products"
          method: "GET"
          headers: []
          duration: "10s"
          statusCode: "200-299"
          readTimeout: "5s"
          successRate: 100
          maxConcurrent: 5
          connectTimeout: "5s"
          followRedirects: false
          requestsPerSecond: 10
        customLabel: "GIVEN: All HTTP requests are successful"
        actionType: "com.steadybit.extension_http.check.periodically"
        radius:
          list: []
  - steps:
      - !<action>
        ignoreFailure: false
        parameters:
          duration: "10s"
          podCountCheckMode: "podCountEqualsDesiredCount"
        customLabel: "GIVEN: All pods are ready"
        actionType: "com.steadybit.extension_kubernetes.pod_count_check"
        radius:
          targetType: "com.steadybit.extension_kubernetes.kubernetes-deployment"
          predicate:
            operator: "AND"
            predicates:
              - key: "k8s.cluster-name"
                operator: "EQUALS"
                values:
                  - "prod-demo"
              - key: "k8s.namespace"
                operator: "EQUALS"
                values:
                  - "steadybit-demo"
          query: null
      - !<action>
        ignoreFailure: false
        parameters:
          duration: "60s"
          hostname: ["db.internal.steadybit.com"]
        customLabel: "WHEN: Microsoft SQL Server is not available"
        actionType: "com.steadybit.extension_container.network_blackhole"
        radius:
          targetType: "com.steadybit.extension_container.container"
          predicate:
            operator: "AND"
            predicates:
              - key: "k8s.cluster-name"
                operator: "EQUALS"
                values:
                  - "prod-demo"
              - key: "k8s.namespace"
                operator: "EQUALS"
                values:
                  - "steadybit-demo"
          query: null
          percentage: 100
  - steps:
      - !<wait>
        ignoreFailure: false
        parameters:
          duration: "10s"
      - !<action>
        ignoreFailure: false
        parameters:
          url: "http://demo.steadybit.io/products"
          method: "GET"
          headers: []
          duration: "70s"
          statusCode: "503"
          readTimeout: "5s"
          successRate: 90
          maxConcurrent: 5
          connectTimeout: "5s"
          followRedirects: false
          requestsPerSecond: 10
        customLabel: "THEN: HTTP requests resolve to be Service unavailable"
        actionType: "com.steadybit.extension_http.check.periodically"
        radius:
          list: []
      - !<action>
        ignoreFailure: false
        parameters:
          url: "http://demo.steadybit.io/products"
          method: "GET"
          headers: []
          duration: "10s"
          statusCode: "200-299"
          readTimeout: "5s"
          successRate: 100
          maxConcurrent: 5
          connectTimeout: "5s"
          followRedirects: false
          requestsPerSecond: 10
        customLabel: "THEN: All HTTP requests are successful again"
        actionType: "com.steadybit.extension_http.check.periodically"
        radius:
          list: []
