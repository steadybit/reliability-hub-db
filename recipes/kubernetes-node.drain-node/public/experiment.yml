---
name: "Draining a node should spawn a new node"
team: "{{teamKey}}"
environment: "{{environmentName}}"
lanes:
  - steps:
      - !<action>
        ignoreFailure: false
        parameters:
          url: "http://demo.steadybit.io/products/cb"
          method: "GET"
          headers: []
          duration: "210s"
          statusCode: "200-299"
          readTimeout: "5s"
          successRate: 100
          maxConcurrent: 5
          connectTimeout: "5s"
          followRedirects: false
          requestsPerSecond: 1
        customLabel:
          "GIVEN: HTTP requests of pod's endpoint are working within expected\
                \ success rate"
        actionType: "com.steadybit.extension_http.check.periodically"
        radius: {}
  - steps:
      - !<action>
        ignoreFailure: false
        parameters:
          duration: "30s"
          podCountCheckMode: "podCountEqualsDesiredCount"
        customLabel: "Given: All Pods of gateway are ready"
        actionType: "com.steadybit.extension_kubernetes.pod_count_check"
        radius:
          targetType: "com.steadybit.extension_kubernetes.kubernetes-deployment"
          predicate:
            operator: "AND"
            predicates:
              - key: "k8s.cluster-name"
                operator: "EQUALS"
                values:
                  - "prod-demo"
              - key: "k8s.namespace"
                operator: "EQUALS"
                values:
                  - "steadybit-demo"
              - key: "k8s.deployment"
                operator: "EQUALS"
                values:
                  - "gateway"
          query: null
      - !<action>
        ignoreFailure: false
        parameters:
          duration: "60s"
        customLabel: "WHEN: Draining a node of gateway"
        actionType: "com.steadybit.extension_kubernetes.drain_node"
        radius:
          targetType: "com.steadybit.extension_kubernetes.kubernetes-node"
          predicate:
            operator: "AND"
            predicates:
              - key: "k8s.cluster-name"
                operator: "EQUALS"
                values:
                  - "prod-demo"
              - key: "k8s.namespace"
                operator: "EQUALS"
                values:
                  - "steadybit-demo"
              - key: "k8s.deployment"
                operator: "EQUALS"
                values:
                  - "gateway"
          query: null
          maximum: 1
      - !<action>
        ignoreFailure: false
        parameters:
          duration: "120s"
          podCountCheckMode: "podCountEqualsDesiredCount"
        customLabel: "THEN: Eventually all Pods should be ready again"
        actionType: "com.steadybit.extension_kubernetes.pod_count_check"
        radius:
          targetType: "com.steadybit.extension_kubernetes.kubernetes-deployment"
          predicate:
            operator: "AND"
            predicates:
              - key: "k8s.cluster-name"
                operator: "EQUALS"
                values:
                  - "prod-demo"
              - key: "k8s.namespace"
                operator: "EQUALS"
                values:
                  - "steadybit-demo"
              - key: "k8s.deployment"
                operator: "EQUALS"
                values:
                  - "gateway"
          query: null
  - steps:
      - !<action>
        ignoreFailure: false
        parameters:
          duration: "210s"
        actionType: "com.steadybit.extension_kubernetes.pod_count_metric"
        radius:
          targetType: "com.steadybit.extension_kubernetes.kubernetes-cluster"
          predicate:
            operator: "AND"
            predicates:
              - key: "k8s.cluster-name"
                operator: "EQUALS"
                values:
                  - "prod-demo"
          query: null
