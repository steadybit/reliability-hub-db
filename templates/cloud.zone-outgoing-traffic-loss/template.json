{
  "id": "01929469-da95-73b9-98c9-32882dc2365a",
  "templateTitle": "Network loss for Kubernetes node's outgoing traffic in an availability zone",
  "templateDescription": "Achieve high availability of your Kubernetes cluster via redundancy across different Availability Zones. Check what happens to your Kubernetes cluster when one of the zones suffers from a network loss.\n\n## Motivation\n\nCloud provider host your deployments and services across multiple locations worldwide.\nFrom a reliability standpoint, regions and availability zones are most interesting.\nWhile the former refers to separate geographic areas spread worldwide, the latter refers to an isolated location within a region.\nFor most use cases, applying deployments across availability zone is sufficient.\nGiven that failures may happen at this level quite frequently, you should verify that your applications are still working in case of an outage.\n\n## Structure\n\nWe leverage the drop outgoing traffic to simulate network loss in an availability. If you want to test for a full outage of the zone, configure it to 100% loss.\nWhile the network loss happens, we observe changes of a Kubernetes cluster with Steadybit's built-in visibility. Once the network loss is over, we expect that all deployments will recover again within a specified time.\n\n## Solution Sketch\n\n- [AWS Regions and Zones](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html)\n- [Azure Regions and Zones](https://learn.microsoft.com/en-us/azure/reliability/availability-zones-overview?tabs=azure-cli)\n- [GCP Regions and Zones](https://cloud.google.com/compute/docs/regions-zones)\n- [Kubernetes liveness, readiness, and startup probes](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/)",
  "placeholders": [
    {
      "key": "availabilityZone",
      "name": "Availability Zone",
      "description": "### In which availability zone would you like to simulate the drop of outgoing traffic for your Kubernetes nodes?"
    },
    {
      "key": "networkLoss",
      "name": "Percentage of Network Loss",
      "description": "### How much percentage of the traffic do you want to drop?\nIf you choose `100%`, you can simulate a full outage for outgoing traffic in the zone"
    },
    {
      "key": "k8sClusterName",
      "name": "Kubernetes Cluster Name",
      "description": "### What is the Kubernetes cluster that you want to observe while injecting the drop of outgoing traffic?"
    },
    {
      "key": "k8sRecoveryTime",
      "name": "Deployment's Recovery Time",
      "description": "### How long do you expect it to take for all your deployments to be ready again after the network loss?\n\nWhile network loss happens in a zone, we expect to see some unready deployments. After the network loss is over, we can check how long it takes for the deployments to be ready again. Specify a reasonable startup time for your deployments, e.g., `200` seconds."
    }
  ],
  "tags": [
    "AWS",
    "Azure",
    "GCP",
    "Redundancy",
    "Kubernetes",
    "Availability Zone"
  ],
  "experimentName": "Network loss in availability zone [[availabilityZone]], [[networkLoss]]% loss of outgoing traffic",
  "hypothesis": "When experiencing a [[networkLoss]]% network loss in availability zone [[availabilityZone]], all affected deployments become ready again within [[k8sRecoveryTime]]",
  "lanes": [
    {
      "steps": [
        {
          "type": "wait",
          "ignoreFailure": false,
          "parameters": {
            "duration": "10s"
          }
        },
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "60s",
            "hostname": [],
            "port": [],
            "networkInterface": [],
            "ip": [],
            "percentage": "[[networkLoss]]"
          },
          "customLabel": "WHEN: Host's outgoing traffic is dropped by [[networkLoss]] in zone [[availabilityZone]]",
          "actionType": "com.steadybit.extension_host.network_package_loss",
          "radius": {
            "targetType": "com.steadybit.extension_host.host",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "k8s.label.topology.kubernetes.io/zone",
                  "operator": "EQUALS",
                  "values": [
                    "[[availabilityZone]]"
                  ]
                }
              ]
            },
            "query": null,
            "percentage": 100
          }
        },
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "[[k8sRecoveryTime]]",
            "podCountCheckMode": "podCountEqualsDesiredCount"
          },
          "customLabel": "THEN: All deployments in the [[k8sClusterName]] are recovering within [[k8sRecoveryTime]] seconds",
          "actionType": "com.steadybit.extension_kubernetes.pod_count_check",
          "radius": {
            "targetType": "com.steadybit.extension_kubernetes.kubernetes-deployment",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "k8s.cluster-name",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sClusterName]]"
                  ]
                }
              ]
            },
            "query": null
          }
        }
      ]
    },
    {
      "steps": [
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "70s"
          },
          "actionType": "com.steadybit.extension_kubernetes.kubernetes_logs",
          "radius": {
            "targetType": "com.steadybit.extension_kubernetes.kubernetes-cluster",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "k8s.cluster-name",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sClusterName]]"
                  ]
                }
              ]
            },
            "query": null
          }
        },
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "[[k8sRecoveryTime]]"
          },
          "actionType": "com.steadybit.extension_kubernetes.kubernetes_logs",
          "radius": {
            "targetType": "com.steadybit.extension_kubernetes.kubernetes-cluster",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "k8s.cluster-name",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sClusterName]]"
                  ]
                }
              ]
            },
            "query": null
          }
        }
      ]
    },
    {
      "steps": [
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "70s"
          },
          "actionType": "com.steadybit.extension_kubernetes.pod_count_metric",
          "radius": {
            "targetType": "com.steadybit.extension_kubernetes.kubernetes-cluster",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "k8s.cluster-name",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sClusterName]]"
                  ]
                }
              ]
            },
            "query": null
          }
        },
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "[[k8sRecoveryTime]]"
          },
          "actionType": "com.steadybit.extension_kubernetes.pod_count_metric",
          "radius": {
            "targetType": "com.steadybit.extension_kubernetes.kubernetes-cluster",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "k8s.cluster-name",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sClusterName]]"
                  ]
                }
              ]
            },
            "query": null
          }
        }
      ]
    }
  ]
}