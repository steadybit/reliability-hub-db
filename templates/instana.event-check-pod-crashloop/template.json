{
  "templateTitle": "Instana should detect a crash looping as incident",
  "templateDescription": "# Intent\nVerify that Instana alerts you that pods are not ready to accept traffic for some time.\n\n## Motivation\n\nKubernetes features a readiness probe to determine whether your pod is ready to accept traffic.\nIf it isn't becoming ready, Kubernetes tries to solve it by restarting the underlying container and hoping to achieve its readiness eventually.\nIf this isn't working, Kubernetes will eventually back off to restart the container, and the Kubernetes resource remains non-functional.\n\n\n## Structure\n\nFirst, check that Instana has no critical events for an application perspective.\nAs soon as one of the containers is crash looping, caused by the Steadybit attack [crash loop](https://hub.steadybit.com/action/com.steadybit.extension_kubernetes.crash_loop_pod), Instana should detect this via a critical event to ensure your on-call team is taking action.\n\n## Solution Sketch\n\n- [Kubernetes liveness, readiness, and startup probes](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/)",
  "placeholders": [
    {
      "key": "k8sNamespace",
      "name": "Kubernetes Namespace",
      "description": "What is the Kubernetes Namespace in which the pod under test is running?"
    },
    {
      "key": "k8sWorkloadOwner",
      "name": "Kubernetes Workload Owner",
      "description": "What is the Kubernetes workload under test? It can be anything that can schedule a pod (e.g., deployment, statefulset, ...)"
    },
    {
      "key": "instanaApplicationLabel",
      "name": "Instana Application Label",
      "description": "Which Instana Application (identified via label) should identify the incident?"
    }
  ],
  "tags": [
    "Crash loop",
    "Instana",
    "Harden Observability",
    "Kubernetes"
  ],
  "experimentName": "Instana should detect a crash looping of [[k8sWorkloadOwner]] as incident",
  "lanes": [
    {
      "steps": [
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "15s",
            "conditionCheckMode": "allTheTime",
            "condition": "noEvents",
            "eventTypeFilters": [
              "INCIDENT",
              "ISSUE"
            ],
            "eventSeverityFilter": "critical"
          },
          "customLabel": "Given: No incident found",
          "actionType": "com.steadybit.extension_instana.event_check",
          "radius": {
            "targetType": "com.steadybit.extension_instana.application-perspective",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "instana.application.label",
                  "operator": "EQUALS",
                  "values": [
                    "[[instanaApplicationLabel]]"
                  ]
                }
              ]
            },
            "query": null
          }
        }
      ]
    },
    {
      "steps": [
        {
          "type": "wait",
          "ignoreFailure": false,
          "parameters": {
            "duration": "15s"
          }
        },
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "180s"
          },
          "customLabel": "WHEN: Kubernetes pod crash loops",
          "actionType": "com.steadybit.extension_kubernetes.crash_loop_pod",
          "radius": {
            "targetType": "com.steadybit.extension_kubernetes.kubernetes-pod",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "k8s.namespace",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sNamespace]]"
                  ]
                },
                {
                  "key": "k8s.workload-owner",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sWorkloadOwner]]"
                  ]
                }
              ]
            },
            "query": null,
            "percentage": 100
          }
        }
      ]
    },
    {
      "steps": [
        {
          "type": "wait",
          "ignoreFailure": false,
          "parameters": {
            "duration": "15s"
          }
        },
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "600s",
            "conditionCheckMode": "atLeastOnce",
            "condition": "atLeastOneEvent",
            "eventTypeFilters": [
              "INCIDENT",
              "ISSUE"
            ],
            "eventSeverityFilter": "critical"
          },
          "customLabel": "THEN: Instana should detect this as incident",
          "actionType": "com.steadybit.extension_instana.event_check",
          "radius": {
            "targetType": "com.steadybit.extension_instana.application-perspective",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "instana.application.label",
                  "operator": "EQUALS",
                  "values": [
                    "[[instanaApplicationLabel]]"
                  ]
                }
              ]
            },
            "query": null
          }
        }
      ]
    },
    {
      "steps": [
        {
          "type": "wait",
          "ignoreFailure": false,
          "parameters": {
            "duration": "15s"
          }
        },
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "600s"
          },
          "customLabel": "WHILE: Mute alerting to avoid escalations",
          "actionType": "com.steadybit.extension_instana.maintenance-window",
          "radius": {
            "targetType": "com.steadybit.extension_instana.application-perspective",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "instana.application.label",
                  "operator": "EQUALS",
                  "values": [
                    "[[instanaApplicationLabel]]"
                  ]
                }
              ]
            },
            "query": null
          }
        }
      ]
    }
  ]
}