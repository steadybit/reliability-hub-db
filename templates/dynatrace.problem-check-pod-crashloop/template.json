{
  "templateTitle": "Dynatrace should detect a crash looping as problem",
  "templateDescription": "## Intent\nVerify that Dynatrace alerts you on pods not being ready to accept traffic for a certain amount of time.\n\n## Motivation\n\nKubernetes features a readiness probe to determine whether your pod is ready to accept traffic.\nIf it isn't becoming ready, Kubernetes tries to solve it by restarting the underlying container and hoping to achieve its readiness eventually.\nIf this isn't working, Kubernetes will eventually back off to restart the container, and the Kubernetes resource remains non-functional.\n\n\n## Structure\n\nFirst, check that Dynatrace has no problems for an entity and doesn't alert already on non-ready containers.\nAs soon as one of the containers is crash looping, caused by the Steadybit attack [crash loop](https://hub.steadybit.com/action/com.steadybit.extension_kubernetes.crash_loop_pod), Dynatrace should detect the problem and alert to ensure your on-call team is taking action.\n\n## Solution Sketch\n\n- [Kubernetes liveness, readiness, and startup probes](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/)",
  "placeholders": [
    {
      "key": "k8sNamespace",
      "name": "Kubernetes Namespace",
      "description": "What is the Kubernetes namespace in which the pod under test is running?"
    },
    {
      "key": "k8sWorkloadOwner",
      "name": "Kubernetes Workload Owner",
      "description": "What is the Kubernetes workload under test? It can be anything that can schedule a pod (e.g., deployment, statefulset, ...)"
    },
    {
      "key": "dynatraceEntitySelector",
      "name": "Dynatrace Entity Selector",
      "description": "What entity selector selects the entity on which Dynatrace should detect the problem? E.g., `entityId(\"CLOUD_APPLICATION-29ACDA7FF58FF097\")`"
    }
  ],
  "tags": [
    "Crash loop",
    "Dynatrace",
    "Harden Observability",
    "Kubernetes"
  ],
  "experimentName": "Dynatrace should detect a crash looping of [[k8sWorkloadOwner]] as problem",
  "hypothesis": "Whenever a pod of [[k8sWorkloadOwner]] is crash looping, Dynatrace notifies us.",
  "lanes": [
    {
      "steps": [
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "15s",
            "conditionCheckMode": "allTheTime",
            "condition": "noProblems",
            "entitySelector": "[[dynatraceEntitySelector]]"
          },
          "customLabel": "Given: No problem found",
          "actionType": "com.steadybit.extension_dynatrace.problem_check",
          "radius": {}
        }
      ]
    },
    {
      "steps": [
        {
          "type": "wait",
          "ignoreFailure": false,
          "parameters": {
            "duration": "15s"
          }
        },
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "180s",
            "container": ""
          },
          "customLabel": "WHEN: Kubernetes pod crash loops",
          "actionType": "com.steadybit.extension_kubernetes.crash_loop_pod",
          "radius": {
            "targetType": "com.steadybit.extension_kubernetes.kubernetes-pod",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "k8s.namespace",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sNamespace]]"
                  ]
                },
                {
                  "key": "k8s.workload-owner",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sWorkloadOwner]]"
                  ]
                }
              ]
            },
            "query": null,
            "percentage": 100
          }
        }
      ]
    },
    {
      "steps": [
        {
          "type": "wait",
          "ignoreFailure": false,
          "parameters": {
            "duration": "15s"
          }
        },
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "300s",
            "conditionCheckMode": "atLeastOnce",
            "condition": "atLeastOneProblem",
            "entitySelector": "[[dynatraceEntitySelector]]"
          },
          "customLabel": "THEN: Dynatrace should detect this as problem",
          "actionType": "com.steadybit.extension_dynatrace.problem_check",
          "radius": {}
        }
      ]
    },
    {
      "steps": [
        {
          "type": "wait",
          "ignoreFailure": false,
          "parameters": {
            "duration": "15s"
          }
        },
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "300s",
            "suppressionType": "DETECT_PROBLEMS_DONT_ALERT"
          },
          "customLabel": "WHILE: Mute alerting problems to avoid escalations",
          "actionType": "com.steadybit.extension_dynatrace.create_maintenance_window",
          "radius": {}
        }
      ]
    }
  ]
}