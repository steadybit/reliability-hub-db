{
  "id": "0363a90e-9563-494c-bd25-81da6e4c3d49",
  "templateTitle": "Graceful degradation of Kubernetes deployment while Kafka suffers a high latency",
  "templateDescription": "Verify that your application handles an increased latency in your Kafka message delivery properly, allowing for increased processing time while maintaining the throughput.\n\n## Motivation\n\nLatency in Kafka can occur for various reasons, such as network congestion, increased load, or insufficient resources. Such latency can impact your application's performance, causing delays in processing messages and affecting overall throughput. By testing your system's resilience to Kafka latency, you can identify any potential weaknesses in your system and take appropriate measures to improve its performance.\n\n## Structure\n\nTo conduct this experiment, we will ensure that all Kafka topics and producers are ready and that the consumer receives and processes messages correctly. We will then induce latency on Kafka by introducing a delay on all incoming and outgoing messages.\nDuring the experiment, we will monitor the system to ensure it continues delivering its intended functionality and maintaining its throughput despite the increased processing time. We will also analyze the monitoring data to identify any potential bottlenecks or inefficiencies in the system and take appropriate measures to address them.\nOnce the experiment is complete, we will remove the latency and monitor the system's recovery time to ensure it returns to its normal state promptly.\nBy conducting this experiment, we can identify any potential weaknesses in our system's resilience to Kafka latency and take appropriate measures to improve its performance and reliability.",
  "placeholders": [
    {
      "key": "k8sClusterName",
      "name": "Kubernetes Cluster Name",
      "description": "### What is the Kubernetes cluster in which the deployment connecting to Kafka runs?"
    },
    {
      "key": "k8sNamespace",
      "name": "Kubernetes Namespace",
      "description": "### What is the Kubernetes namespace in which the deployment connecting to Kafka runs?"
    },
    {
      "key": "k8sDeployment",
      "name": "Kubernetes Deployment",
      "description": "### What is the Kubernetes deployment connecting to Kafka?"
    },
    {
      "key": "kafkaHostname",
      "name": "Kafka Hostname",
      "description": "### What is the hostname of the Kafka message broker used by the Kubernetes workload owner?\n\nPlease note that we only block traffic from the Kubernetes workload for that specific hostname to simulate Kafka unavailability."
    },
    {
      "key": "datadogMonitorName",
      "name": "Datadog Monitor",
      "description": "### Which Datadog Monitor should identify the latency in Kafka?"
    }
  ],
  "tags": [
    "Kafka",
    "Recoverability",
    "Datadog"
  ],
  "experimentName": "Graceful degradation of [[k8sDeployment]] while Kafka suffers a high latency",
  "hypothesis": "Whenever Kafka has a latency, the deployment [[k8sDeployment]] doesn't crash, and Datadog alerts.",
  "lanes": [
    {
      "steps": [
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "4m",
            "podCountCheckMode": "podCountEqualsDesiredCount"
          },
          "customLabel": "INVARIANT: Pods survive a Kafka latency",
          "actionType": "com.steadybit.extension_kubernetes.pod_count_check",
          "radius": {
            "targetType": "com.steadybit.extension_kubernetes.kubernetes-deployment",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "k8s.cluster-name",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sClusterName]]"
                  ]
                },
                {
                  "key": "k8s.namespace",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sNamespace]]"
                  ]
                },
                {
                  "key": "k8s.deployment",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sDeployment]]"
                  ]
                }
              ]
            },
            "query": null
          }
        }
      ]
    },
    {
      "steps": [
        {
          "type": "wait",
          "ignoreFailure": false,
          "parameters": {
            "duration": "30s"
          }
        },
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "2m",
            "hostname": [
              "[[kafkaHostname]]"
            ],
            "port": [
              "9094"
            ],
            "networkDelay": "300ms",
            "networkInterface": [
              "eth0"
            ],
            "failOnHostNetwork": "true",
            "networkDelayJitter": true
          },
          "customLabel": "WHEN: Kafka is slow because of a network issue",
          "actionType": "com.steadybit.extension_container.network_delay",
          "radius": {
            "targetType": "com.steadybit.extension_container.container",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "k8s.cluster-name",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sClusterName]]"
                  ]
                },
                {
                  "key": "k8s.namespace",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sNamespace]]"
                  ]
                },
                {
                  "key": "k8s.deployment",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sDeployment]]"
                  ]
                }
              ]
            },
            "query": null,
            "percentage": 100
          }
        },
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "60s",
            "statusCheckMode": "allTheTime",
            "expectedStatusList": [
              "OK"
            ]
          },
          "customLabel": "THEN: Monitor should go back to green",
          "actionType": "com.steadybit.extension_datadog.monitor.status_check",
          "radius": {
            "targetType": "com.steadybit.extension_datadog.monitor",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "datadog.monitor.name",
                  "operator": "EQUALS",
                  "values": [
                    "[[datadogMonitorName]]"
                  ]
                }
              ]
            },
            "query": null
          }
        }
      ]
    },
    {
      "steps": [
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "30s",
            "statusCheckMode": "allTheTime",
            "expectedStatusList": [
              "OK",
              "No Data"
            ]
          },
          "customLabel": "GIVEN: Monitors are green",
          "actionType": "com.steadybit.extension_datadog.monitor.status_check",
          "radius": {
            "targetType": "com.steadybit.extension_datadog.monitor",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "datadog.monitor.name",
                  "operator": "EQUALS",
                  "values": [
                    "[[datadogMonitorName]]"
                  ]
                }
              ]
            },
            "query": null
          }
        },
        {
          "type": "action",
          "ignoreFailure": true,
          "parameters": {
            "duration": "2m",
            "statusCheckMode": "atLeastOnce",
            "expectedStatusList": [
              "Alert"
            ]
          },
          "customLabel": "THEN: Monitor should alert a latency issue",
          "actionType": "com.steadybit.extension_datadog.monitor.status_check",
          "radius": {
            "targetType": "com.steadybit.extension_datadog.monitor",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "datadog.monitor.name",
                  "operator": "EQUALS",
                  "values": [
                    "[[datadogMonitorName]]"
                  ]
                }
              ]
            },
            "query": null
          }
        }
      ]
    },
    {
      "steps": [
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "4m"
          },
          "customLabel": "Show Kubernetes events from the cluster",
          "actionType": "com.steadybit.extension_kubernetes.kubernetes_logs",
          "radius": {
            "targetType": "com.steadybit.extension_kubernetes.kubernetes-cluster",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "k8s.cluster-name",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sClusterName]]"
                  ]
                }
              ]
            },
            "query": null
          }
        }
      ]
    },
    {
      "steps": [
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "4m"
          },
          "customLabel": "Show Pod Count Metrics for the cluster",
          "actionType": "com.steadybit.extension_kubernetes.pod_count_metric",
          "radius": {
            "targetType": "com.steadybit.extension_kubernetes.kubernetes-cluster",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "k8s.cluster-name",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sClusterName]]"
                  ]
                }
              ]
            },
            "query": null
          }
        }
      ]
    }
  ]
}