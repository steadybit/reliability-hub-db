{
  "templateTitle": "Load balancer covers an AWS EC2 restart",
  "templateDescription": "## Intent\n\nEC2 is part of the AWS Elastic Compute Cloud, which acquires and releases resources depending on the traffic demand.\nCheck whether your application is elastic as well by rebooting an EC2 instance.\n\n## Motivation\n\nDepending on your traffic demand, you can use AWS cloud's ability to acquire and release resources automatically.\nSome services, such as S3 and SQS, do that automatically, while others, such as EC2, integrate with AWS Auto Scaling.\nOnce configured, it boils down to fluctuating EC2 instances starting or shutting down frequently.\nEven when not using AWS Autoscaling, your EC2 instances may need to be restarted occasionally for maintenance and updating purposes.\nThus, it is best practice to validate your application's behavior.\n\n## Structure\n\nWe ensure that a load-balanced user-facing endpoint fully works while having all EC2 instances available.\nWhile restarting an EC2 instance, the HTTP endpoint continues operating but may suffer from degraded performance (e.g., lower success rate or higher response time).\nThe performance should recover to a 100% success rate once all EC2 instances are back.\n\n## Solution Sketch\n\n- [AWS Well-Architected Framework](https://wa.aws.amazon.com/wat.concept.elasticity.en.html)\n- [Kubernetes liveness, readiness, and startup probes](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/)",
  "placeholders": [
    {
      "key": "awsAccount",
      "name": "AWS Account",
      "description": "What is the AWS Account in which the EC2 is running?"
    },
    {
      "key": "awsEC2InstanceName",
      "name": "AWS EC2 Instance Name",
      "description": "What is the instance name of the EC2 that should be rebooted?"
    },
    {
      "key": "httpLoadBalancedEndpoint",
      "name": "HTTP Load Balanced Endpoint",
      "description": "What is the URL of a **load-balanced HTTP endpoint** served by a service running on one of the EC2 instances?\n\n**Note**: The HTTP endpoint should be served by at least one other EC2 instance. We will reboot one EC2 instance and check whether the load balancer appropriately routes requests to the running EC2 instance."
    },
    {
      "key": "httpSuccessRate",
      "name": "HTTP Success Rate",
      "description": "What is the expected success rate of HTTP requests while the EC2 is rebooting?\n\n**Note:** Finding an appropriate success rate usually depends on the offered service's business criticality and retry mechanisms in place. If the service is, e.g., called by another application with an appropriate retry mechanism, the success rate may be lower compared to a user-visible endpoint."
    },
    {
      "key": "ec2RecoveryTime",
      "name": "EC2 Recovery Time",
      "description": "How long do you expect it to take before EC2 is available again and the HTTP service works faultlessly?"
    }
  ],
  "tags": [
    "Scalability",
    "Redundancy",
    "Elasticity",
    "AWS"
  ],
  "experimentName": "Load-balanced endpoint works when EC2 [[awsEC2InstanceName]] restarts",
  "hypothesis": "Whenever we restart EC2 [[awsEC2InstanceName]], a load-balanced HTTP endpoint works within a given success rate.",
  "lanes": [
    {
      "steps": [
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "10s",
            "headers": [],
            "method": "GET",
            "successRate": 100,
            "maxConcurrent": 5,
            "followRedirects": false,
            "readTimeout": "5s",
            "connectTimeout": "5s",
            "requestsPerSecond": 10,
            "url": "[[httpLoadBalancedEndpoint]]",
            "statusCode": "200-299"
          },
          "customLabel": "GIVEN: All HTTP-Calls are successful",
          "actionType": "com.steadybit.extension_http.check.periodically",
          "radius": {}
        }
      ]
    },
    {
      "steps": [
        {
          "type": "wait",
          "ignoreFailure": false,
          "parameters": {
            "duration": "10s"
          }
        },
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "action": "reboot"
          },
          "customLabel": "WHEN: AWS EC2 is rebooted",
          "actionType": "com.steadybit.extension_aws.ec2_instance.state",
          "radius": {
            "targetType": "com.steadybit.extension_aws.ec2-instance",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "aws.account",
                  "operator": "EQUALS",
                  "values": [
                    "[[awsAccount]]"
                  ]
                },
                {
                  "key": "aws-ec2.instance.name",
                  "operator": "CONTAINS",
                  "values": [
                    "[[awsEC2InstanceName]]"
                  ]
                }
              ]
            },
            "query": null,
            "maximum": 1
          }
        }
      ]
    },
    {
      "steps": [
        {
          "type": "wait",
          "ignoreFailure": false,
          "parameters": {
            "duration": "10s"
          }
        },
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "[[ec2RecoveryTime]]",
            "headers": [],
            "method": "GET",
            "successRate": "[[httpSuccessRate]]",
            "maxConcurrent": 5,
            "followRedirects": false,
            "readTimeout": "5s",
            "connectTimeout": "5s",
            "requestsPerSecond": 10,
            "url": "[[httpLoadBalancedEndpoint]]",
            "statusCode": "200-299"
          },
          "customLabel": "THEN: At least [[httpSuccessRate]]% of the HTTP calls are successful",
          "actionType": "com.steadybit.extension_http.check.periodically",
          "radius": {}
        },
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "30s",
            "headers": [],
            "method": "GET",
            "successRate": 100,
            "maxConcurrent": 5,
            "followRedirects": false,
            "readTimeout": "5s",
            "connectTimeout": "5s",
            "requestsPerSecond": 10,
            "url": "[[httpLoadBalancedEndpoint]]",
            "statusCode": "200-299"
          },
          "customLabel": "THEN: All HTTP calls are successful again",
          "actionType": "com.steadybit.extension_http.check.periodically",
          "radius": {}
        }
      ]
    }
  ]
}