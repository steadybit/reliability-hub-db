{
  "id": "0363a90e-9563-494c-bd25-81da6e4c3d50",
  "templateTitle": "Graceful degradation while Kafka is unavailable",
  "templateDescription": "An unavailable Kafka is not user-visible as it leads to graceful degradation and downstream retries as soon as the Kafka is back available again.\n\n## Motivation\n\nIn case of an unavailable Kafka message broker, your application should still work successfully. To decouple your system parts from each other, each Kafka client should take care of appropriate caching and retry mechanisms and shouldn't make the failed Kafka message broker visible to the end user. Instead, your system should fail gracefully, so retry the submission as soon as the Kafka message broker is back again.\n\n## Structure\n\nWe will use two separate Postman collections to decouple request submissions and check business functionality. The first Postman collection runs while Kafka is unavailable. We expect the Postman collection to run without errors and the system to somehow save all requests. After Kafka is available again, we will check with another Postman collection to see whether all requests have been received and processed. In between, we allow for some processing time.",
  "placeholders": [
    {
      "key": "k8sClusterName",
      "name": "Kubernetes Cluster Name",
      "description": "## What is the Kubernetes cluster in which the pods accessing Kafka run?"
    },
    {
      "key": "k8sNamespace",
      "name": "Kubernetes Namespace",
      "description": "## What is the Kubernetes namespace in which the pods accessing Kafka run?"
    },
    {
      "key": "k8sWorkloadOwner",
      "name": "Kubernetes Workload Owner",
      "description": "## What is the Kubernetes workload that schedules the pods accessing Kafka? It can be anything that can schedule a pod (e.g., deployment, statefulset, ...)"
    },
    {
      "key": "kafkaHostname",
      "name": "Kafka Hostname",
      "description": "## What is the hostname of the Kafka message broker used by the Kubernetes workload owner?\n\nPlease note that we only block traffic from the Kubernetes workload for that specific hostname to simulate Kafka unavailability."
    },
    {
      "key": "postmanCollectionRequest",
      "name": "Postman Collection Requests",
      "description": "## What is the name of the Postman collection that will send requests to your system?\n\nThese requests are sent while Kafka is unavailable. Later, we check their successful processing using another Postman collection."
    },
    {
      "key": "postmanCollectionRequestRunIterations",
      "name": "Postman Collection Run Iterations",
      "description": "## How often do you want to run the Postman collection to send requests?\n\nWe recommend running the Postman collection several times to ensure it runs while Kafka is unavailable (30 seconds)."
    },
    {
      "key": "processingTime",
      "name": "Processing Time",
      "description": "## How much time do you want to give the system after Kafka is available again to process all received requests and before checking via a second Postman collection?"
    },
    {
      "key": "postmanCollectionCheck",
      "name": "Postman Collection Check",
      "description": "## What is the name of the Postman collection that verifies whether all requests to your system where processed eventually?"
    },
    {
      "key": "postmanEnvironmentName",
      "name": "Postman Environment Name",
      "description": "## In which Postman environment do you want to run both Postman collections? (optional)"
    }
  ],
  "tags": [
    "Kafka",
    "Recoverability",
    "Postman",
    "Kubernetes"
  ],
  "experimentName": "Verify graceful degradation while Kafka is unavailable",
  "hypothesis": "Whenever Kafka is unavailable, [[k8sWorkloadOwner]] doesn't loose any requests and processes them eventually.",
  "lanes": [
    {
      "steps": [
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "30s",
            "failOnHostNetwork": "true",
            "hostname": [
              "[[kafkaHostname]]"
            ],
            "port": []
          },
          "customLabel": "WHEN: Kafka is not available",
          "actionType": "com.steadybit.extension_container.network_blackhole",
          "radius": {
            "targetType": "com.steadybit.extension_container.container",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "k8s.cluster-name",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sClusterName]]"
                  ]
                },
                {
                  "key": "k8s.namespace",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sNamespace]]"
                  ]
                },
                {
                  "key": "k8s.workload-owner",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sWorkloadOwner]]"
                  ]
                }
              ]
            },
            "query": null,
            "percentage": 100
          }
        }
      ]
    },
    {
      "steps": [
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "30s",
            "environment": [],
            "bail": false,
            "iterations": "[[postmanCollectionRequestRunIterations]]",
            "environmentIdOrName": "[[postmanEnvironmentName]]",
            "verbose": false
          },
          "customLabel": "THEN: Postman collection can submit [[postmanCollectionRequestRunIterations]] requests successfully",
          "actionType": "com.steadybit.extension_postman.collection.run",
          "radius": {
            "targetType": "com.steadybit.extension_postman.collection",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "postman.collection.name",
                  "operator": "EQUALS",
                  "values": [
                    "[[postmanCollectionRequest]]"
                  ]
                }
              ]
            },
            "query": null,
            "percentage": 100
          }
        },
        {
          "type": "wait",
          "ignoreFailure": false,
          "parameters": {
            "duration": "[[processingTime]]"
          }
        },
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "10s",
            "environment": [],
            "bail": false,
            "iterations": 1,
            "environmentIdOrName": "[[postmanEnvironmentName]]",
            "verbose": false
          },
          "customLabel": "THEN: Postman collection checks that all [[postmanCollectionRequestRunIterations]] requests have been processed",
          "actionType": "com.steadybit.extension_postman.collection.run",
          "radius": {
            "targetType": "com.steadybit.extension_postman.collection",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "postman.collection.name",
                  "operator": "EQUALS",
                  "values": [
                    "[[postmanCollectionCheck]]"
                  ]
                }
              ]
            },
            "query": null,
            "percentage": 100
          }
        }
      ]
    },
    {
      "steps": [
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "1m"
          },
          "customLabel": "Show Kubernetes events from the cluster",
          "actionType": "com.steadybit.extension_kubernetes.kubernetes_logs",
          "radius": {
            "targetType": "com.steadybit.extension_kubernetes.kubernetes-cluster",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "k8s.cluster-name",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sClusterName]]"
                  ]
                }
              ]
            },
            "query": null
          }
        }
      ]
    },
    {
      "steps": [
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "1m"
          },
          "customLabel": "Show Pod Count Metrics for the cluster",
          "actionType": "com.steadybit.extension_kubernetes.pod_count_metric",
          "radius": {
            "targetType": "com.steadybit.extension_kubernetes.kubernetes-cluster",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "k8s.cluster-name",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sClusterName]]"
                  ]
                }
              ]
            },
            "query": null
          }
        }
      ]
    }
  ]
}