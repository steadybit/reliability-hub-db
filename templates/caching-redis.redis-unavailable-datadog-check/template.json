{
  "id": "0363a90e-9563-494c-bd25-81da6e4c3d23",
  "templateTitle": "Kubernetes deployment survives Redis downtime",
  "templateDescription": "Check that your application gracefully handles a Redis cache downtime and continues to deliver its intended functionality. The cache downtime may be caused by an unavailable Redis instance or a complete cluster.\n\n## Motivation\n\nRedis downtime can lead to degraded system performance, lost data, and potentially long system recovery times.\nBy testing your system's resilience to Redis downtime, you can ensure that it can handle the outage gracefully and continue to deliver its intended functionality.\nAdditionally, you can identify any potential weaknesses in your system and take appropriate measures to improve its performance and resilience.\n\n## Structure\n\nWe will verify that a load-balanced user-facing endpoint fully works while having all pods ready.\nAs soon as we simulate Redis downtime, we expect the system to indicate unavailability appropriately and maintain its throughput.\nWe can block the traffic to the Redis instance to simulate downtime. The experiment aims to ensure that your system can gracefully handle the outage and continue delivering its intended functionality.\nThe performance should return to normal after the Redis instance is available again.",
  "placeholders": [
    {
      "key": "k8sClusterName",
      "name": "Kubernetes Cluster Name",
      "description": "## What is the Kubernetes cluster in which the deployment under test is running?"
    },
    {
      "key": "k8sNamespace",
      "name": "Kubernetes Namespace",
      "description": "## What is the Kubernetes namespace in which the deployment under test is running?"
    },
    {
      "key": "k8sDeployment",
      "name": "Kubernetes Deployment",
      "description": "## What is the Kubernetes deployment under test?"
    },
    {
      "key": "redisPort",
      "name": "Redis Port",
      "description": "## Which port is used by the Kubernetes deployment to communicate with Redis?\n\n**Default**: `6379`"
    },
    {
      "key": "datadogMonitorTags",
      "name": "Datadog Monitor Tags",
      "description": "## Which Datadog Monitors (identified via Tags) should notice Redis' downtime?"
    },
    {
      "key": "httpLoadBalancedEndpoint",
      "name": "HTTP Load Balanced Endpoint",
      "description": "## What is the URL of a **load-balanced HTTP endpoint** served by the Kubernetes deployment?"
    },
    {
      "key": "httpSuccessRate",
      "name": "HTTP Success Rate",
      "description": "## What is the expected success rate of HTTP requests while Redis is unavailable?\n\nFinding an appropriate success rate usually depends on the offered service's business criticality and retry mechanisms in place. If the service is, e.g., called by another application with an appropriate retry mechanism, the success rate may be lower compared to a user-visible endpoint."
    }
  ],
  "tags": [
    "Redis",
    "Recoverability",
    "Datadog"
  ],
  "experimentName": "Kubernetes deployment [[k8sDeployment]] survives Redis downtime",
  "hypothesis": "Whenever Redis is down, the deployment [[k8sDeployment]] doesn't crash, and a load-balanced HTTP endpoint works within a given success rate.",
  "lanes": [
    {
      "steps": [
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "3m",
            "headers": [],
            "method": "GET",
            "successRate": "[[httpSuccessRate]]",
            "maxConcurrent": 5,
            "followRedirects": false,
            "readTimeout": "5s",
            "connectTimeout": "5s",
            "requestsPerSecond": 10,
            "url": "[[httpLoadBalancedEndpoint]]",
            "statusCode": "200-299"
          },
          "customLabel": "WHILE: The service should survive a Redis outage",
          "actionType": "com.steadybit.extension_http.check.periodically",
          "radius": {}
        }
      ]
    },
    {
      "steps": [
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "30s",
            "statusCheckMode": "allTheTime",
            "expectedStatusList": [
              "OK",
              "No Data"
            ]
          },
          "customLabel": "GIVEN: Monitors are green",
          "actionType": "com.steadybit.extension_datadog.monitor.status_check",
          "radius": {
            "targetType": "com.steadybit.extension_datadog.monitor",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "datadog.monitor.tags",
                  "operator": "EQUALS",
                  "values": [
                    "[[datadogMonitorTags]]"
                  ]
                }
              ]
            },
            "query": null
          }
        },
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "2m",
            "failOnHostNetwork": true,
            "hostname": [],
            "port": [],
            "ip": []
          },
          "customLabel": "WHEN: Redis is not available",
          "actionType": "com.steadybit.extension_container.network_blackhole",
          "radius": {
            "targetType": "com.steadybit.extension_container.container",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "k8s.cluster-name",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sClusterName]]"
                  ]
                },
                {
                  "key": "k8s.namespace",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sNamespace]]"
                  ]
                },
                {
                  "key": "k8s.deployment",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sDeployment]]"
                  ]
                }
              ]
            },
            "query": null,
            "percentage": 100
          }
        }
      ]
    },
    {
      "steps": [
        {
          "type": "wait",
          "ignoreFailure": false,
          "parameters": {
            "duration": "30s"
          }
        },
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "2m",
            "podCountCheckMode": "podCountEqualsDesiredCount"
          },
          "customLabel": "THEN: Pod should be resilient to unavailability of the cache",
          "actionType": "com.steadybit.extension_kubernetes.pod_count_check",
          "radius": {
            "targetType": "com.steadybit.extension_kubernetes.kubernetes-deployment",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "k8s.cluster-name",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sClusterName]]"
                  ]
                },
                {
                  "key": "k8s.namespace",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sNamespace]]"
                  ]
                },
                {
                  "key": "k8s.deployment",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sDeployment]]"
                  ]
                }
              ]
            },
            "query": null
          }
        }
      ]
    },
    {
      "steps": [
        {
          "type": "wait",
          "ignoreFailure": false,
          "parameters": {
            "duration": "30s"
          }
        },
        {
          "type": "action",
          "ignoreFailure": true,
          "parameters": {
            "duration": "2m",
            "statusCheckMode": "atLeastOnce",
            "expectedStatusList": [
              "Alert"
            ]
          },
          "customLabel": "THEN: Monitor alert about unavailable Redis",
          "actionType": "com.steadybit.extension_datadog.monitor.status_check",
          "radius": {
            "targetType": "com.steadybit.extension_datadog.monitor",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "datadog.monitor.tags",
                  "operator": "EQUALS",
                  "values": [
                    "[[datadogMonitorTags]]"
                  ]
                }
              ]
            },
            "query": null
          }
        },
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "60s",
            "statusCheckMode": "allTheTime",
            "expectedStatusList": [
              "OK"
            ]
          },
          "customLabel": "THEN: Monitor should go back to green",
          "actionType": "com.steadybit.extension_datadog.monitor.status_check",
          "radius": {
            "targetType": "com.steadybit.extension_datadog.monitor",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "datadog.monitor.tags",
                  "operator": "EQUALS",
                  "values": [
                    "[[datadogMonitorTags]]"
                  ]
                }
              ]
            },
            "query": null
          }
        }
      ]
    },
    {
      "steps": [
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "3m"
          },
          "customLabel": "Show Kubernetes events from the cluster",
          "actionType": "com.steadybit.extension_kubernetes.kubernetes_logs",
          "radius": {
            "targetType": "com.steadybit.extension_kubernetes.kubernetes-cluster",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "k8s.cluster-name",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sClusterName]]"
                  ]
                }
              ]
            },
            "query": null
          }
        }
      ]
    },
    {
      "steps": [
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "3m"
          },
          "customLabel": "Show Pod Count Metrics for the cluster",
          "actionType": "com.steadybit.extension_kubernetes.pod_count_metric",
          "radius": {
            "targetType": "com.steadybit.extension_kubernetes.kubernetes-cluster",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "k8s.cluster-name",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sClusterName]]"
                  ]
                }
              ]
            },
            "query": null
          }
        }
      ]
    }
  ]
}