{
  "templateTitle": "AWS Zone Outage Doesn't Result in User-Visible Errors",
  "templateDescription": "## Intent\nAWS achieves high availability via redundancy across different Availability Zones. Ensure that failover works seamlessly by simulating Zone outages.\n\n## Motivation\nAWS hosts your deployments and services across multiple locations worldwide. From a reliability standpoint, AWS regions and Availability Zones are most interesting. While the former refers to separate geographic areas spread worldwide, the latter refers to an isolated location within a region. For most use cases applying deployments across AWS availability zone is sufficient. Given that failures may happen at this level quite frequently, you should verify that your applications are still working in case of an outage.\n\n## Structure\nWe leverage the AWS blackhole attack to simulate an AWS availability zone outage. Before the simulated outage, we ensure that a load-balanced user-facing endpoint works appropriately. During an AWS availability zone's unavailability, the HTTP endpoint must continue operating but may suffer from degraded performance (e.g., lower success rate or higher response time). The performance should recover as soon as the zone is back again.",
  "placeholders": [
    {
      "key": "k8sNamespace",
      "name": "Kubernetes Namespace",
      "description": "What is the **Kubernetes namespace** of the Kubernetes Deployment under test?"
    },
    {
      "key": "k8sDeployment",
      "name": "Kubernetes Deployment",
      "description": "What is the name of the **Kubernetes Deployment** under test?"
    },
    {
      "key": "awsZone",
      "name": "AWS Zone of Deployment",
      "description": "Which **AWS Availability Zone** of the Kubernetes deployment should be simulated to have an outage?\n\n__Note__: Please make sure that you select one of the availability zones that your deployment is actually deployed into."
    },
    {
      "key": "k8sDeploymentRecoveryDuration",
      "name": "Kubernetes Deployment's Recovery Time",
      "description": "What is the expected duration of recovery for the Kubernetes Deployment under test?"
    },
    {
      "key": "httpUrl",
      "name": "Service's HTTP URL",
      "description": "Specify an HTTP endpoint the deployment under-test offers that should work within an expected success rate."
    },
    {
      "key": "httpUrlSuccessRate",
      "name": "Service's HTTP URL Success Rate",
      "description": "What is the expected HTTP success rate for the system under-test?"
    }
  ],
  "tags": [
    "Redundancy",
    "AWS"
  ],
  "experimentName": "AWS Zone Outage of [[k8sDeployment]] Doesn't Result in User-Visible Errors",
  "lanes": [
    {
      "steps": [
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "10s",
            "podCountCheckMode": "podCountEqualsDesiredCount"
          },
          "customLabel": "GIVEN: All pods are ready",
          "actionType": "com.steadybit.extension_kubernetes.pod_count_check",
          "radius": {
            "targetType": "com.steadybit.extension_kubernetes.kubernetes-deployment",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "k8s.namespace",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sNamespace]]"
                  ]
                },
                {
                  "key": "k8s.deployment",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sDeployment]]"
                  ]
                }
              ]
            },
            "query": null
          }
        }
      ]
    },
    {
      "steps": [
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "10s",
            "headers": [],
            "method": "GET",
            "successRate": 100,
            "maxConcurrent": 5,
            "followRedirects": false,
            "readTimeout": "5s",
            "connectTimeout": "5s",
            "requestsPerSecond": 10,
            "url": "[[httpUrl]]",
            "statusCode": "200-299"
          },
          "customLabel": "GIVEN: HTTP API is working as expected",
          "actionType": "com.steadybit.extension_http.check.periodically",
          "radius": {}
        },
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "10s",
            "podCountCheckMode": "podCountLessThanDesiredCount"
          },
          "customLabel": "THEN: Unready pods are detected",
          "actionType": "com.steadybit.extension_kubernetes.pod_count_check",
          "radius": {
            "targetType": "com.steadybit.extension_kubernetes.kubernetes-deployment",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "k8s.namespace",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sNamespace]]"
                  ]
                },
                {
                  "key": "k8s.deployment",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sDeployment]]"
                  ]
                }
              ]
            },
            "query": null
          }
        }
      ]
    },
    {
      "steps": [
        {
          "type": "wait",
          "ignoreFailure": false,
          "parameters": {
            "duration": "10s"
          }
        },
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "60s",
            "failOnHostNetwork": true,
            "hostname": [],
            "port": [],
            "ip": []
          },
          "customLabel": "WHEN: AWS Zone [[awsZone]] is unavailable",
          "actionType": "com.steadybit.extension_container.network_blackhole",
          "radius": {
            "targetType": "com.steadybit.extension_container.container",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "k8s.namespace",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sNamespace]]"
                  ]
                },
                {
                  "key": "k8s.deployment",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sDeployment]]"
                  ]
                },
                {
                  "key": "aws.zone",
                  "operator": "EQUALS",
                  "values": [
                    "[[awsZone]]"
                  ]
                },
                {
                  "key": "k8s.cluster-name",
                  "operator": "EQUALS",
                  "values": [
                    "{{k8sClusterName}}"
                  ]
                }
              ]
            },
            "query": null,
            "percentage": 50
          }
        }
      ]
    },
    {
      "steps": [
        {
          "type": "wait",
          "ignoreFailure": false,
          "parameters": {
            "duration": "10s"
          }
        },
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "60s",
            "headers": [],
            "method": "GET",
            "successRate": "100",
            "maxConcurrent": 5,
            "followRedirects": false,
            "readTimeout": "5s",
            "connectTimeout": "5s",
            "requestsPerSecond": 10,
            "url": "[[httpUrl]]",
            "statusCode": "200-299"
          },
          "customLabel": "THEN: All HTTP calls are successfull again",
          "actionType": "com.steadybit.extension_http.check.periodically",
          "radius": {}
        },
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "60s",
            "headers": [],
            "method": "GET",
            "successRate": "[[httpUrlSuccessRate]]",
            "maxConcurrent": 5,
            "followRedirects": false,
            "readTimeout": "5s",
            "connectTimeout": "5s",
            "requestsPerSecond": 10,
            "url": "[[httpUrl]]",
            "statusCode": "200-299"
          },
          "customLabel": "THEN: At least [[httpUrlSuccessRate]] of the HTTP calls are successfull",
          "actionType": "com.steadybit.extension_http.check.periodically",
          "radius": {}
        },
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "[[k8sDeploymentRecoveryDuration]]",
            "podCountCheckMode": "podCountEqualsDesiredCount"
          },
          "customLabel": "THEN: All pods recover",
          "actionType": "com.steadybit.extension_kubernetes.pod_count_check",
          "radius": {
            "targetType": "com.steadybit.extension_kubernetes.kubernetes-deployment",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "k8s.namespace",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sNamespace]]"
                  ]
                },
                {
                  "key": "k8s.deployment",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sDeployment]]"
                  ]
                }
              ]
            },
            "query": null
          }
        }
      ]
    }
  ]
}