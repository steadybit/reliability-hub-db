{
  "templateTitle": "Load balancer covers an AWS zone outage",
  "templateDescription": "## Intent\n\nAWS achieves high availability via redundancy across different Availability Zones.\nEnsure that failover works seamlessly by simulating Zone outages.\n\n## Motivation\n\nAWS hosts your deployments and services across multiple locations worldwide.\nFrom a reliability standpoint, AWS regions and Availability Zones are most interesting.\nWhile the former refers to separate geographic areas spread worldwide, the latter refers to an isolated location within a region.\nFor most use cases, applying deployments across AWS availability zone is sufficient.\nGiven that failures may happen at this level quite frequently, you should verify that your applications are still working in case of an outage.\n\n## Structure\n\nWe leverage the AWS blackhole attack to simulate an AWS availability zone outage.\nBefore the simulated outage, we ensure that a load-balanced user-facing endpoint works appropriately.\nDuring an AWS availability zone's unavailability, the HTTP endpoint must continue operating but may suffer from degraded performance (e.g., lower success rate or higher response time).\nThe performance should recover as soon as the zone is back again.\n\n## Solution Sketch\n\n- [Regions and Zones](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html)\n- [Kubernetes liveness, readiness, and startup probes](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/)",
  "placeholders": [
    {
      "key": "awsAccount",
      "name": "AWS Account",
      "description": "What is the AWS Account in which your services are running?"
    },
    {
      "key": "awsZone",
      "name": "AWS Zone",
      "description": "For which AWS zone would you like to simulate an outage?"
    },
    {
      "key": "httpLoadBalancedEndpoint",
      "name": "HTTP Load Balanced Endpoint",
      "description": "What is the URL of a **load-balanced HTTP endpoint** served by a service running in your multi-AZ environment?  \n\n**Note**: The HTTP endpoint should be served by a system deployed into at least 2 availability zones. We will block one availability zone and check whether the load balancer appropriately routes requests to the running zone."
    },
    {
      "key": "httpSuccessRate",
      "name": "HTTP Success Rate",
      "description": "What is the expected success rate of HTTP requests while one of the AZ is down?\n\n**Note:** Finding an appropriate success rate usually depends on the offered service's business criticality and retry mechanisms in place. If the service is, e.g., called by another application with an appropriate retry mechanism, the success rate may be lower compared to a user-visible endpoint."
    },
    {
      "key": "recoveryTime",
      "name": "Recovery Time",
      "description": "After the zone outage, how long do you expect it to take before everything should be available again and the HTTP service works faultlessly?"
    }
  ],
  "tags": [
    "Redundancy",
    "AWS"
  ],
  "experimentName": "Load balancer covers zone outage of [[awsZone]]",
  "hypothesis": "Whenever we have a zone outage, a load-balanced HTTP endpoint works within a given success rate and eventually the system recovers within [[recoveryTime]].",
  "lanes": [
    {
      "steps": [
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "10s",
            "headers": [],
            "method": "GET",
            "successRate": 100,
            "maxConcurrent": 5,
            "followRedirects": false,
            "readTimeout": "5s",
            "connectTimeout": "5s",
            "requestsPerSecond": 10,
            "url": "[[httpLoadBalancedEndpoint]]",
            "statusCode": "200-299"
          },
          "customLabel": "GIVEN: All HTTP-Calls are successful",
          "actionType": "com.steadybit.extension_http.check.periodically",
          "radius": {}
        }
      ]
    },
    {
      "steps": [
        {
          "type": "wait",
          "ignoreFailure": false,
          "parameters": {
            "duration": "10s"
          }
        },
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": 30
          },
          "customLabel": "WHEN: AWS Zone [[awsZone]] is unavailable",
          "actionType": "com.steadybit.extension_aws.az.blackhole",
          "radius": {
            "targetType": "com.steadybit.extension_aws.zone",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "aws.account",
                  "operator": "EQUALS",
                  "values": [
                    "[[awsAccount]]"
                  ]
                },
                {
                  "key": "aws.zone.id",
                  "operator": "EQUALS",
                  "values": [
                    "[[awsZone]]"
                  ]
                }
              ]
            },
            "query": null,
            "maximum": 1
          }
        }
      ]
    },
    {
      "steps": [
        {
          "type": "wait",
          "ignoreFailure": false,
          "parameters": {
            "duration": "10s"
          }
        },
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "30s",
            "headers": [],
            "method": "GET",
            "successRate": "[[httpSuccessRate]]",
            "maxConcurrent": 5,
            "followRedirects": false,
            "readTimeout": "5s",
            "connectTimeout": "5s",
            "requestsPerSecond": 10,
            "url": "[[httpLoadBalancedEndpoint]]",
            "statusCode": "200-299"
          },
          "customLabel": "THEN: At least [[httpSuccessRate]]% of the HTTP calls are successful",
          "actionType": "com.steadybit.extension_http.check.periodically",
          "radius": {}
        },
        {
          "type": "wait",
          "ignoreFailure": false,
          "parameters": {
            "duration": "[[recoveryTime]]"
          },
          "customLabel": "THEN: Wait for systems to recover"
        },
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "30s",
            "headers": [],
            "method": "GET",
            "successRate": 100,
            "maxConcurrent": 5,
            "followRedirects": false,
            "readTimeout": "5s",
            "connectTimeout": "5s",
            "requestsPerSecond": 10,
            "url": "[[httpLoadBalancedEndpoint]]",
            "statusCode": "200-299"
          },
          "customLabel": "THEN: All HTTP calls are successful again",
          "actionType": "com.steadybit.extension_http.check.periodically",
          "radius": {}
        }
      ]
    }
  ]
}