{
  "templateTitle": "Graceful degradation of Kubernetes deployment while RabbitMQ suffers high latency",
  "templateDescription": "Verify that your application handles an increased latency in your RabbitMQ message delivery properly, allowing for increased processing time while maintaining the throughput.\n\n## Motivation\n\nLatency issues in RabbitMQ can lead to degraded system performance, longer response times, and potentially lost or delayed data.\nBy testing the resilience of your system to RabbitMQ latency, you can ensure that your system can handle increased processing time and maintain its throughput during increased latency.\nAdditionally, you can identify any potential bottlenecks or inefficiencies in your system and take appropriate measures to optimize its performance and reliability.\n\n## Structure\n\nWe will verify that a load-balanced user-facing endpoint fully works while having all pods ready.\nAs soon as we simulate RabbitMQ latency, we expect the system to maintain its throughput and indicate unavailability appropriately.\nTo simulate latency, we can introduce delays in message delivery.\nThe experiment aims to ensure that your system can handle increased processing time and maintain its throughput during increased latency.\nThe performance should return to normal after the latency has ended.",
  "placeholders": [
    {
      "key": "k8sClusterName",
      "name": "Kubernetes Cluster Name",
      "description": "What is the Kubernetes cluster in which the deployment connecting to RabbitMQ runs?"
    },
    {
      "key": "k8sNamespace",
      "name": "Kubernetes Namespace",
      "description": "What is the Kubernetes namespace in which the deployment connecting to RabbitMQ runs?"
    },
    {
      "key": "k8sDeployment",
      "name": "Kubernetes Deployment",
      "description": "What is the Kubernetes deployment connecting to RabbitMQ?"
    },
    {
      "key": "rabbitMQHostname",
      "name": "RabbitMQ Hostname",
      "description": "What is the hostname of RabbitMQ used by the Kubernetes deployment?\n\nPlease note that we inject latency into the traffic from the Kubernetes deployment for that specific hostname."
    },
    {
      "key": "datadogMonitorTags",
      "name": "Datadog Monitor Tags",
      "description": "Which Datadog Monitors (identified via Tags) should identify the latency to RabbitMQ?"
    }
  ],
  "tags": [
    "RabbitMQ",
    "Datadog",
    "Recoverability",
    "Kubernetes"
  ],
  "experimentName": "Graceful degradation of [[k8sDeployment]] while RabbitMQ suffers high latency",
  "hypothesis": "Whenever RabbitMQ has a latency, the deployment [[k8sDeployment]] doesn't crash, and Datadog alerts.",
  "lanes": [
    {
      "steps": [
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "4m",
            "podCountCheckMode": "podCountEqualsDesiredCount"
          },
          "customLabel": "INVARIANT: Pods should survive a RabbitMQ latency",
          "actionType": "com.steadybit.extension_kubernetes.pod_count_check",
          "radius": {
            "targetType": "com.steadybit.extension_kubernetes.kubernetes-deployment",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "k8s.cluster-name",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sClusterName]]"
                  ]
                },
                {
                  "key": "k8s.namespace",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sNamespace]]"
                  ]
                },
                {
                  "key": "k8s.deployment",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sDeployment]]"
                  ]
                }
              ]
            },
            "query": null
          }
        }
      ]
    },
    {
      "steps": [
        {
          "type": "wait",
          "ignoreFailure": false,
          "parameters": {
            "duration": "30s"
          }
        },
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "2m",
            "hostname": [
              "[[rabbitMQHostname]]"
            ],
            "port": [
              "5672"
            ],
            "networkDelay": "300ms",
            "networkInterface": [
              "eth0"
            ],
            "failOnHostNetwork": "true",
            "networkDelayJitter": true
          },
          "customLabel": "WHEN: RabbitMQ is slow because of a network issue",
          "actionType": "com.steadybit.extension_container.network_delay",
          "radius": {
            "targetType": "com.steadybit.extension_container.container",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "k8s.cluster-name",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sClusterName]]"
                  ]
                },
                {
                  "key": "k8s.namespace",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sNamespace]]"
                  ]
                },
                {
                  "key": "k8s.deployment",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sDeployment]]"
                  ]
                }
              ]
            },
            "query": null,
            "percentage": 100
          }
        },
        {
          "type": "wait",
          "ignoreFailure": false,
          "parameters": {
            "duration": "20s"
          }
        },
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "30s",
            "statusCheckMode": "allTheTime",
            "expectedStatusList": [
              "OK"
            ]
          },
          "customLabel": "THEN: Monitor should go back to green",
          "actionType": "com.steadybit.extension_datadog.monitor.status_check",
          "radius": {
            "targetType": "com.steadybit.extension_datadog.monitor",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "datadog.monitor.tags",
                  "operator": "EQUALS",
                  "values": [
                    "[[datadogMonitorTags]]"
                  ]
                }
              ]
            },
            "query": null
          }
        }
      ]
    },
    {
      "steps": [
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "30s",
            "statusCheckMode": "allTheTime",
            "expectedStatusList": [
              "OK",
              "No Data"
            ]
          },
          "customLabel": "GIVEN: Monitors are green",
          "actionType": "com.steadybit.extension_datadog.monitor.status_check",
          "radius": {
            "targetType": "com.steadybit.extension_datadog.monitor",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "datadog.monitor.tags",
                  "operator": "EQUALS",
                  "values": [
                    "[[datadogMonitorTags]]"
                  ]
                }
              ]
            },
            "query": null
          }
        },
        {
          "type": "wait",
          "ignoreFailure": false,
          "parameters": {
            "duration": "30s"
          }
        },
        {
          "type": "action",
          "ignoreFailure": true,
          "parameters": {
            "duration": "100s",
            "statusCheckMode": "atLeastOnce",
            "expectedStatusList": [
              "Alert"
            ]
          },
          "customLabel": "THEN: Monitor should alert a latency issue",
          "actionType": "com.steadybit.extension_datadog.monitor.status_check",
          "radius": {
            "targetType": "com.steadybit.extension_datadog.monitor",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "datadog.monitor.tags",
                  "operator": "EQUALS",
                  "values": [
                    "[[datadogMonitorTags]]"
                  ]
                }
              ]
            },
            "query": null
          }
        }
      ]
    },
    {
      "steps": [
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "4m"
          },
          "customLabel": "Show Kubernetes events from the cluster",
          "actionType": "com.steadybit.extension_kubernetes.kubernetes_logs",
          "radius": {
            "targetType": "com.steadybit.extension_kubernetes.kubernetes-cluster",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "k8s.cluster-name",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sClusterName]]"
                  ]
                }
              ]
            },
            "query": null
          }
        }
      ]
    },
    {
      "steps": [
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "4m"
          },
          "customLabel": "Show Pod Count Metrics for the cluster",
          "actionType": "com.steadybit.extension_kubernetes.pod_count_metric",
          "radius": {
            "targetType": "com.steadybit.extension_kubernetes.kubernetes-cluster",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "k8s.cluster-name",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sClusterName]]"
                  ]
                }
              ]
            },
            "query": null
          }
        }
      ]
    }
  ]
}