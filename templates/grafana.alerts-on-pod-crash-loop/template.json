{
  "id": "1934bfc5-f71f-4df1-86d5-aaa2d2327d84",
  "templateTitle": "Grafana alert rule fires when a Kubernetes pod is in crash loop",
  "templateDescription": "Verify that a Grafana alert rule alerts you when pods are not ready to accept traffic for a certain time.\n\n## Motivation\n\nKubernetes features a readiness probe to determine whether your pod is ready to accept traffic.\nIf it isn't becoming ready, Kubernetes tries to solve it by restarting the underlying container and hoping to achieve its readiness eventually.\nIf this isn't working, Kubernetes will eventually back off to restart the container, and the Kubernetes resource remains non-functional.\n\n\n## Structure\n\nFirst, check that the Grafana alert rule responsible for tracking non-ready containers is in an 'okay' state.\nAs soon as one of the containers is crash looping, caused by the [crash loop](https://hub.steadybit.com/action/com.steadybit.extension_kubernetes.crash_loop_pod) attack, the Grafana alert rule should fire and escalate it to your on-call team.\n\n## Solution Sketch\n\n- [Kubernetes liveness, readiness, and startup probes](https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/)",
  "placeholders": [
    {
      "key": "k8sClusterName",
      "name": "Kubernetes Cluster Name",
      "description": "### What is the Kubernetes cluster in which the deployment under test is running?"
    },
    {
      "key": "k8sNamespace",
      "name": "Kubernetes Namespace",
      "description": "### What is the Kubernetes namespace in which the pod under test is running?"
    },
    {
      "key": "k8sWorkloadOwner",
      "name": "Kubernetes Workload Owner",
      "description": "### What is the Kubernetes workload under test? It can be anything that can schedule a pod (e.g., deployment, statefulset, ...)"
    },
    {
      "key": "grafanaAlertRuleName",
      "name": "Grafana Alert Rule Name",
      "description": "### Which Grafana Alert Rule (identified via name) should fire due to the crash loop?"
    }
  ],
  "tags": [
    "Crash loop",
    "Harden Observability",
    "Restart",
    "Grafana",
    "Kubernetes"
  ],
  "experimentName": "Grafana alert rule should fire due to crash looping of [[k8sWorkloadOwner]]",
  "hypothesis": "Whenever a pod of [[k8sWorkloadOwner]] is crash looping, Grafana notifies us.",
  "lanes": [
    {
      "steps": [
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "10s",
            "stateCheckMode": "allTheTime",
            "expectedStateList": [
              "normal",
              "inactive"
            ]
          },
          "customLabel": "GIVEN: Alert Rule is 'normal' or 'inactive'",
          "actionType": "com.steadybit.extension_grafana.alert-rule.check",
          "radius": {
            "targetType": "com.steadybit.extension_grafana.alert-rule",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "grafana.alert-rule.name",
                  "operator": "EQUALS",
                  "values": [
                    "[[grafanaAlertRuleName]]"
                  ]
                }
              ]
            },
            "query": null
          }
        }
      ]
    },
    {
      "steps": [
        {
          "type": "wait",
          "ignoreFailure": false,
          "parameters": {
            "duration": "10s"
          }
        },
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "5m"
          },
          "customLabel": "WHEN: Kubernetes pod crash loops",
          "actionType": "com.steadybit.extension_kubernetes.crash_loop_pod",
          "radius": {
            "targetType": "com.steadybit.extension_kubernetes.kubernetes-pod",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "k8s.cluster-name",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sClusterName]]"
                  ]
                },
                {
                  "key": "k8s.namespace",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sNamespace]]"
                  ]
                },
                {
                  "key": "k8s.workload-owner",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sWorkloadOwner]]"
                  ]
                }
              ]
            },
            "query": null,
            "percentage": 50
          }
        }
      ]
    },
    {
      "steps": [
        {
          "type": "wait",
          "ignoreFailure": false,
          "parameters": {
            "duration": "10s"
          }
        },
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "6m",
            "stateCheckMode": "atLeastOnce",
            "expectedStateList": [
              "firing"
            ]
          },
          "customLabel": "THEN: Alert Rule is firing because of non-ready pods for more than 2 minutes",
          "actionType": "com.steadybit.extension_grafana.alert-rule.check",
          "radius": {
            "targetType": "com.steadybit.extension_grafana.alert-rule",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "grafana.alert-rule.name",
                  "operator": "EQUALS",
                  "values": [
                    "[[grafanaAlertRuleName]]"
                  ]
                }
              ]
            },
            "query": null
          }
        }
      ]
    },
    {
      "steps": [
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "370s"
          },
          "customLabel": "Show Kubernetes events from the cluster",
          "actionType": "com.steadybit.extension_kubernetes.kubernetes_logs",
          "radius": {
            "targetType": "com.steadybit.extension_kubernetes.kubernetes-cluster",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "k8s.cluster-name",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sClusterName]]"
                  ]
                }
              ]
            },
            "query": null
          }
        }
      ]
    },
    {
      "steps": [
        {
          "type": "action",
          "ignoreFailure": false,
          "parameters": {
            "duration": "370s"
          },
          "customLabel": "Show Pod Count Metrics for the cluster",
          "actionType": "com.steadybit.extension_kubernetes.pod_count_metric",
          "radius": {
            "targetType": "com.steadybit.extension_kubernetes.kubernetes-cluster",
            "predicate": {
              "operator": "AND",
              "predicates": [
                {
                  "key": "k8s.cluster-name",
                  "operator": "EQUALS",
                  "values": [
                    "[[k8sClusterName]]"
                  ]
                }
              ]
            },
            "query": null
          }
        }
      ]
    }
  ]
}